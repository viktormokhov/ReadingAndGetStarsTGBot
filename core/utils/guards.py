from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from core.database import user_ops
from core.database.init_db import AsyncSessionLocal


async def block_if_pending_message(message: Message, state: FSMContext) -> bool:
    """
    –ë–ª–æ–∫–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å (theme —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω).
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    """
    data = await state.get_data()
    if data.get("theme"):
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—Ç—å –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å! üòä")
        return True
    return False


async def block_if_pending_callback(callback: CallbackQuery, state: FSMContext) -> bool:
    """
    –ë–ª–æ–∫–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å (theme —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω).
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è CallbackQuery.
    """
    data = await state.get_data()
    if data.get("theme"):
        await callback.answer("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—Ç—å –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å!", show_alert=True)
        return True
    return False
