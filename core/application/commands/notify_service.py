import logging
from datetime import datetime

from config.settings import get_tg_settings
from core.domain.models.user import UserResponse
from core.infrastructure.telegram.telegram_client import TelegramClient


async def notify_admin_about_registration(user: UserResponse, birth_date: str):
    tg_settings = get_tg_settings()
    bot_token = tg_settings.tg_bot_token
    admin_id = tg_settings.tg_admin_id

    birth_date_formatted = datetime.strptime(birth_date, "%Y-%m-%d").strftime("%d.%m.%Y")
    text = (
        f"üÜï <b>–ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!</b>\n\n"
        f"üë§ <b>–ò–º—è:</b> {user.name}\n"
        f"üÜî <b>Telegram ID:</b> {user.telegram_id}\n"
        f"üéÇ <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {user.age} –ª–µ—Ç\n"
        f"üìÖ <b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {birth_date_formatted}\n"
        f"üé® <b>–ê–≤–∞—Ç–∞—Ä:</b> {user.avatar}\n\n"
        f"‚è∞ <b>–í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {datetime.now().strftime('%d.%m.%Y %H:%M')}\n\n"
        f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?"
    )
    reply_markup = {
        "inline_keyboard": [
            [
                {
                    "text": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                    "callback_data": f"approve_user_{user.telegram_id}"
                },
                {
                    "text": "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                    "callback_data": f"reject_user_{user.telegram_id}"
                }
            ]
        ]
    }
    await send_message(
        bot_token,
        int(admin_id),
        text,
        reply_markup
    )


async def notify_admin_after_restart():
    tg_settings = get_tg_settings()
    tg_client = TelegramClient(tg_settings.bot_token)
    admin_id = tg_settings.tg_admin_id
    try:
        response = await tg_client.send_message(
            admin_id,
            "‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω!"
        )
        if response.get("ok"):
            logging.info("Admin notified about restart successfully.")
        else:
            logging.error(f"Failed to notify admin: {response}")
    except Exception as e:
        logging.error(f"Exception during admin notification: {e}")