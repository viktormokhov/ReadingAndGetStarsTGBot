import logging
from typing import Any, Optional

from aiogram.types import CallbackQuery

from src.core.domain.services.ai.llm_image_content_generator import LLMImageContentGenerator
from src.core.application.decorators.block import async_with_generating_flag

@async_with_generating_flag(lambda call, qs, logger, dispatcher: qs.uid, kind="card")
async def process_card_generation(
        call: CallbackQuery,
        qs: Any,
        logger: logging.Logger,
        dispatcher
) -> Optional[bool]:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É —Å –ø–æ–º–æ—â—å—é LLM, –∑–∞–º–µ–Ω—è–µ—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ë–î.

    –®–∞–≥–∏ —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏:
        1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–º.
        2. –ü–æ–ª—É—á–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        3. –°–æ–∑–¥–∞—ë—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞.
        4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –≤ —á–∞—Ç.
        5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏.
        6. –ó–∞–º–µ–Ω—è–µ—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –Ω–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π).
        7. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    """
    async with AsyncSessionLocal() as session:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç –≤ –ë–î
        if await is_card_duplicate(qs.uid, qs.theme, qs.card_title, session):
            return None

        age = await get_user_age(qs.uid, session)
        generator = LLMImageContentGenerator(uid=qs.uid, theme=qs.theme, age=age)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º placeholder —Å–æ–æ–±—â–µ–Ω–∏–µ
        placeholder_msg = await call.bot.send_message(
            chat_id=call.message.chat.id,
            text="üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—Ç–æ—á–∫—É‚Ä¶",
        )
        msg_id = placeholder_msg.message_id

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        try:
            url = await generator.generate_image(qs.card_title)
        except Exception as err:
            await edit_placeholder_with_error(call, msg_id, str(err))
            return False

        # –ó–∞–º–µ–Ω—è–µ–º placeholder –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        if not await replace_placeholder_with_media(call, msg_id, url, logger):
            return None

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤ –ë–î
        try:
            await save_card(qs.uid, qs.theme, qs.card_title, url.media, session)
            return True
        except Exception as err:
            await call.message.edit_text(str(err))
            return False