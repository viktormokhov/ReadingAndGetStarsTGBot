import logging

from src.config.settings import get_tg_settings
from src.core.infrastructure.database.repositories.sqlalchemy_user_repository import SQLAlchemyUserRepository

logger = logging.getLogger(__name__)

tg_settings = get_tg_settings()

async def init_admin_flags():
    """
    –ü—Ä–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ–ª–∞–≥ is_admin=True –¥–ª—è –≤—Å–µ—Ö ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ TG_ADMIN_ID.
    –°–æ–∑–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑–µ, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç.
    """
    async with SQLAlchemyUserRepository() as repo:
        admin_id = tg_settings.tg_admin_id
        user = await repo.get_by_id(admin_id)
        if user is None:
            await repo.create(admin_id, name="admin", is_admin=True, status='approved')
            logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {admin_id} —Å–æ–∑–¥–∞–Ω –∫–∞–∫ admin")
        elif not user.is_admin:
            user.is_admin = True
            await repo.session.commit()
            logger.info(f"üîë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {admin_id} —Ç–µ–ø–µ—Ä—å admin")
