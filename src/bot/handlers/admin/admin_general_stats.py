from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.utils.markdown import hbold
from fastapi import Depends

from core.application.security.admin_only import admin_only
from bot.handlers.ui.ui_admin import admin_back_menu_kb
from core.application.services.admin.admin_stats import get_general_stats
from core.infrastructure.db.repository_factory import RepositoryFactory

router = Router()

async def user_repo_dep():
    return RepositoryFactory.create_user_repository()

@router.callback_query(F.data == "admin:stats")
@admin_only()
async def show_general_stats(call: CallbackQuery, is_admin: bool, user_repo = Depends(user_repo_dep)):
    try:
        await call.answer()
        stats = await get_general_stats(user_repo)

        msg = (
            f"{hbold('üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')}\n\n"
            f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats.total_users}\n"
            f"‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ: {stats.approved_users}\n"
            f"üìà –°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å: {stats.avg_accuracy * 100:.0f}%\n"
            f"‚≠ê –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥: {stats.total_stars}\n"
            f"üïì –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤ –±–æ—Ç–µ: {stats.avg_active_hours} —á {stats.avg_active_minutes} –º–∏–Ω\n"
            f"üí¨ –í–æ–ø—Ä–æ—Å–æ–≤ –∑–∞–¥–∞–Ω–æ: {stats.total_questions}\n"
            f"üÉè –ö–∞—Ä—Ç–æ—á–µ–∫ –≤—ã–¥–∞–Ω–æ: {stats.total_cards}"
        )

        await call.message.edit_text(
            msg,
            reply_markup=admin_back_menu_kb(),
            parse_mode="HTML"
        )

    except Exception as e:
        await call.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=admin_back_menu_kb()
        )
