from aiogram import Router, F
from aiogram.filters import CommandStart, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message

from bot.handlers.ui.ui_main import main_menu_inline_kb, build_access_request_keyboard
from core.infrastructure.database.repositories.sqlalchemy_user_repository import SQLAlchemyUserRepository
from core.infrastructure.database.user_ops import update_user_age

router = Router()


class Registration(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    waiting_age = State()


def is_valid_age(age_text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞.
    –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 5 –¥–æ 99.
    """
    return age_text.isdigit() and 5 <= int(age_text) <= 99


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ–¥–æ–±—Ä–µ–Ω –∏ —É–∫–∞–∑–∞–ª –≤–æ–∑—Ä–∞—Å—Ç ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    –ï—Å–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç –Ω–µ —É–∫–∞–∑–∞–Ω ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç.
    –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø –Ω–µ –∑–∞–ø—Ä–æ—à–µ–Ω ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø.
    –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚Äî —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ–± —ç—Ç–æ–º.
    """
    uid = message.from_user.id
    async with SQLAlchemyUserRepository() as repo:
        user = await repo.get_or_create(uid, message.from_user.full_name)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ–¥–æ–±—Ä–µ–Ω –∏ –≤–æ–∑—Ä–∞—Å—Ç –µ—Å—Ç—å ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
    if user.is_approved and user.age is not None:
        await message.answer(
            f"–ü—Ä–∏–≤–µ—Ç üëã, <b>{user.name}</b>! –í—ã–±–∏—Ä–∞–π —Ä–∞–∑–¥–µ–ª:",
            reply_markup=main_menu_inline_kb(user.is_admin)
        )

    if user.age is None:
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –≤–≤–µ–¥—ë–Ω
        await state.set_state(Registration.waiting_age)
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b>{user.name or message.from_user.full_name}</b>! –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
        return

    if not user.has_requested_access and not user.is_admin:
        await message.answer(
            "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø.",
            reply_markup=build_access_request_keyboard()
        )
    elif not user.is_approved and not user.is_admin:
        await message.answer(
            "üì© –¢–≤–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Å—Ç—É–ø —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.",
        )


@router.message(StateFilter(Registration.waiting_age), F.text)
async def process_age(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    –ü—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –≤–≤–æ–¥–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ.
    """
    data = await state.get_data()
    prompt_id = data.get("age_prompt_id")

    # –í–∞–ª–∏–¥–∞—Ü–∏—è
    if not is_valid_age(message.text):
        if prompt_id:
            await message.bot.delete_message(message.chat.id, prompt_id)
        sent = await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ (5‚Äì99)"
        )
        await state.update_data(age_prompt_id=sent.message_id)
        return

    await update_user_age(message.from_user.id, int(message.text))
    await state.clear()

    await cmd_start(message, state)
